# Documented Peer Review

By Hugh Wan, Rayvinder, & Felipe

**Note that this document are only reviewing files that were included in the repository as of the time of this document were written.**

This document intend to review and comment on all of the codes and models that were commited/pushed to the GitHub repository. On top of that, I will also include some explanation on a certain models and the working logic behind it. The next part will divide into two section, which are for the text-captcha branch and the image-captcha branch, and subsequently the author and then the files. For example:

- BranchName
	- Author
		- Files
		

## <u>Text Captcha Branch</u>

### 1. Cecilia Sammut

#### <u>PreProcessing_Cecilia.py</u>

The code has a good documentation where every line of code has an explanation on what the author is doing. However, the author did not specify what is their desire outcome and possible next step in the future. I would suggest having another line of comment to explain what do they expect in this particular code. Writing explanation in a script file would be difficult, thus, having it in a jupyter files would be better.

#### <u>AllDataCombiningCNN.ipynb</u>

This document has a good explanation in each cell of code to show what the author is doing. However, as mentioned earlier, I would suggest having a markdown after every cell to explain the outcome of the code and also evaluating the results whether if its good or bad, so that people that will be going through this notebook will be able to see what can be improve on and what do the original lacks in terms of computational power and knowledge gap. 

#### <u>Recognition.ipynb</u>

It has a good documentation in every cell of code to explain the steps taken. However, in the first cell, I do not think it is neccessary to print our the directory of the download files, as it has taken a huge chunk of space in the notebook and people have to scroll all the way down to go to the next line of code. And I think most importantly, this directory contains all of the files of the author's personal computer. Thus, it is a privacy concern where it might show some sensitive files that the author has in their computer. 

### 2. Felipe Molinari Ortiz

#### <u>TextCAPTCHA_Pipeline_Felipe_0_3.ipynb</u>

This document has a good documentation in every cell of code. However, it cuts off at the end without any explanation.

### 3. Josh_Theodore

#### <u>Segmentation.ipynb</u>

This document has a good documentation in every cell of code but it lacks explanation of what the desire output of the author.

### 4. Rayvinder Singh

#### <u>20220517_NN_Ray.ipynb</u>

This document has a good documentation in every cell of code.

### 5. Renee Farina

#### <u>EdgeDetection_Renee_thresholding.ipynb</u>

This document has a good documentation in every cell of code but it lacks explanation of what the desire output of the author.

#### <u>Preprocessing_Renee_segmentation.py</u>

This document has a good documentation in every cell of code but it lacks explanation of what the desire output of the author. And it would be best to do it in Jupyter Notebook so that everyone can visual the output.

### 6. Stefan Andjelkovic & Oliver McCann

#### <u>DevelopingTraining_Stefan_Oliver.ipynb</u>

This document has a good documentation in every cell of code but it lacks explanation of what the desire output of the author. Moreover, there is some missing cell in the file that we do not know why. 

### 7. Youchan Shin

#### <u>SVM-For-EMNIST-For-Digits and Numbers-Youchan-Shin.ipynb.ipynb</u>

This document has a good documentation in every cell of code but it lacks explanation of what the desire output of the author. And I would suggest not splitting the EMNIST model into 3 different files since they all does the same thing and it will be easier to visualise all of the output in one single files. 

## <u>Image Captcha Branch</u>

### 1. Felipe Molinari Ortiz

#### <u>reCAPTCHA _scraped_data </u>

The scraped data is well organized and the recaptcha_scraper.js file is clearly explained with prompts. However, the scraping_handler.py file could have prompts in it as well similar to the recaptcha_scraper.js file. A link is provided to the scraped data images from json->images->link to scraped images

### 2. Gerald Araullo

#### <u>Basic_CNN_Model_Gerard.ipynb</u>

The Basic CNN model file provides clear prompts and explanation for the various steps in the coding process. However, it could have also stated an short explanation of the model results. 

### 3. Jack Lenigas

#### <u>Comparison Report - Jack Lenigas.pdf</u>

A report on the comparison between Image Classification and CAPTCHA classification models for development purposes. 

#### <u>FasterRCNN+InceptionResnetv2.ipynb</u>

Object and Image detection code that was clearly explained in the in-code prompts. 


### 4. Rayvinder Singh

#### <u>BaseNeuralNetwork_Ray.ipynb<u>
A baseline neural network that experiments with various techniques that enhances and optimizes the model and it was clearly explained in the in-code prompts.

#### <u>CNN_Ray.ipynb<u>
A baseline convolutional neural network that experiments with various techniques that enhances and optimizes the model and it was clearly explained in the in-code prompts.

#### <u>CNNv2_Ray.ipynb<u>
A complex convolutional neural network developed for image classification and it was clearly explained in the in-code prompts. However, more detailed could have been added discussing the results and model performance. 

### 5. Tyler Quinlivan

#### <u>DataLoadingOptions_Tyler.ipynb<u>
The code started with clear in-code prompts but it did not continue. More detail could have been added explaining the plots and why they have been produced. 

### 6. William Tan

#### <u>CIFAR10_William.ipynb<u>
Very clear explanation of the model with each and every step explained clearly. 

#### <u>CIFAR10_William2.ipynb<u>
Very clear explanation of the model with clear explanations 



